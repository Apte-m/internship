# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

stages:
  - build
  - test
  - docker-build

build:
  image: maven:latest
  stage: build
  script:
    - mvn compile

test:
  image: maven:latest
  stage: test
  script:
    - mvn test

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: docker-build
  services:
    - docker:dind
  before_script:
    - apk add --no-cache bash git maven
    - mvn package
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - ls -lah
    - NAME="registry.gitlab.com/antara-services/antara_java_at_2021_08/at-school"
    - VERSION="$(git log -1 --pretty=format:'%h').$(date +%Y%m%d).$CI_PIPELINE_IID"
    - IMG="$NAME:$VERSION"
    - LATEST="$NAME:latest"
    - docker build -t $IMG .
    - docker tag $IMG $LATEST
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push $NAME
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
